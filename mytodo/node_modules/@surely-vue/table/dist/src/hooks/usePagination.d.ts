import type { ComputedRef } from 'vue';
import type { SurelyTableProps } from '../components/interface';
import type { TablePaginationConfig } from '../components/PaginationConfig';
export declare const DEFAULT_PAGE_SIZE = 10;
export declare function getPaginationParam(pagination: TablePaginationConfig | boolean | undefined, mergedPagination: TablePaginationConfig): any;
declare type PaginationPos = {
    bottom?: 'left' | 'right';
    top?: 'left' | 'right';
};
interface PaginationRes {
    mergedPagination: ComputedRef<TablePaginationConfig>;
    onChange: (page: number, pageSize?: number) => void;
    onShowSizeChange: (current: number, size: number) => void;
    pos: ComputedRef<PaginationPos>;
    refreshPagination: () => void;
    pageData: ComputedRef<any[]>;
}
export default function usePagination(total: ComputedRef<number>, props: SurelyTableProps, mergedData: ComputedRef<any[]>, onChange?: (current: number, pageSize: number) => void): PaginationRes;
export {};
