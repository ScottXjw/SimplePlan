import type { FinallyColumnType } from '../interface';
import type { PropType } from 'vue';
import { isVNode } from 'vue';
declare const _default: import("vue").DefineComponent<{
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => FinallyColumnType<import("../interface").DefaultRecordType>;
    };
    prefixCls: StringConstructor;
    wrapText: BooleanConstructor;
}, {
    tableSlotsContext: import("../context/TableSlotsContext").ContextSlots;
    isVNode: typeof isVNode;
    title: import("vue").ComputedRef<import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>>;
    autoHeight: boolean;
    altTitle: import("vue").ComputedRef<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => FinallyColumnType<import("../interface").DefaultRecordType>;
    };
    prefixCls: StringConstructor;
    wrapText: BooleanConstructor;
}>>, {
    column: FinallyColumnType<import("../interface").DefaultRecordType>;
    wrapText: boolean;
}, {}>;
export default _default;
